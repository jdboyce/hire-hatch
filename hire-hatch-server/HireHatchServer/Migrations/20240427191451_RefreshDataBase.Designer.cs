// <auto-generated />
using System;
using HireHatchServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HireHatchServer.Migrations
{
    [DbContext(typeof(JobContext))]
    [Migration("20240427191451_RefreshDataBase")]
    partial class RefreshDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("HireHatchServer.Models.Job", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateApplied")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FollowUpDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostingUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salary")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = "3107346e-69ca-4559-bf77-36ff01cfed22",
                            CompanyName = "Tech Innovations Inc.",
                            DateApplied = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            FollowUpDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            JobTitle = "Frontend Developer",
                            Location = "Remote",
                            Notes = "Angular-focused team. Values collaboration and continuous learning. Good work-life balance.",
                            PostingUrl = "<https://www.linkedin.com/jobs/12345>",
                            Priority = "High",
                            Salary = "$95,000",
                            Source = "LinkedIn",
                            Status = "Submitted Application",
                            Type = "Full-time"
                        },
                        new
                        {
                            Id = "a6e5e5a0-5c1d-4f6e-8e5f-7e7f8c6e9c7e",
                            CompanyName = "Web Wizards Agency",
                            DateApplied = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            FollowUpDate = new DateTime(2024, 2, 23, 20, 17, 38, 0, DateTimeKind.Local),
                            JobTitle = "Angular Developer",
                            Location = "Remote",
                            Notes = "Startup culture. Encourages candid dialogue. Flexible and remote. Great reviews.",
                            PostingUrl = "https://www.glassdoor.com/jobs/67890",
                            Priority = "High",
                            Salary = "$90,000",
                            Source = "Glassdoor",
                            Status = "Interviewed",
                            Type = "Full-time"
                        },
                        new
                        {
                            Id = "d9f3d0c2-7b6e-4b1e-9c3e-8d7f6c5e4d3d",
                            CompanyName = "Creative Minds Co.",
                            DateApplied = new DateTime(2024, 2, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            JobTitle = "Full Stack Developer",
                            Location = "Hybrid (Charlotte, NC)",
                            Notes = ".NET Core and React in stack. Good salary. Offers annual tech conference tickets.",
                            PostingUrl = "https://www.webwizards.com/careers",
                            Priority = "Medium",
                            Salary = "$100,000",
                            Source = "Company Website",
                            Status = "Prepping Interview",
                            Type = "Contract"
                        },
                        new
                        {
                            Id = "b4c2b0a4-3d6e-4c1e-9b3e-8a7f6b5c4a3b",
                            CompanyName = "Digital Solutions Ltd.",
                            DateApplied = new DateTime(2024, 2, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            FollowUpDate = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            JobTitle = "Software Engineer",
                            Location = "Remote",
                            Notes = "Dynamic culture with emphasis on agile development. Competitive benefits.",
                            PostingUrl = "https://www.indeed.com/jobs/54321",
                            Priority = "Medium",
                            Salary = "$85,000",
                            Source = "Indeed",
                            Status = "Offer Received",
                            Type = "Full-time"
                        },
                        new
                        {
                            Id = "dfd1aced-c9b2-48cf-9029-789a9fe4d4de",
                            CompanyName = "InnovateTech Solutions",
                            JobTitle = "Lead Developer",
                            Location = "On-site (Charlotte, NC)",
                            Notes = "Offers mentorship programs, supports professional development.",
                            PostingUrl = "https://www.careerbuilder.com/jobs/98765",
                            Priority = "Low",
                            Salary = "$40/hour",
                            Source = "CareerBuilder",
                            Status = "Reviewing Posting",
                            Type = "Part-time"
                        });
                });

            modelBuilder.Entity("HireHatchServer.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Full-time"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Contract"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Part-time"
                        });
                });

            modelBuilder.Entity("HireHatchServer.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "High"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Low"
                        });
                });

            modelBuilder.Entity("HireHatchServer.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Reviewing Posting"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Not Interested"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Prepping Application"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Submitted Application"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Prepping Interview"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Interviewed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Offer Received"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Declined"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Offer Accepted"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
